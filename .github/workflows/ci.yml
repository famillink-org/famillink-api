name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  lint-test-build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mysmartfamily
          MYSQL_USER: mysmartfamily
          MYSQL_PASSWORD: mysmartfamily
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      # Application settings
      APP_VERSION: V1.0.1
      APP_COPYRIGHT: 2024-2025
      APP_SUPPORT_EMAIL: support-msf@krysinfo.fr
      APP_FRONTEND_URL: http://localhost:4200

      # Database configuration
      DB_HOST: localhost
      DB_PORT: 3306
      DB_NAME: mysmartfamily
      DB_USER: mysmartfamily
      DB_PASSWORD: mysmartfamily

      # File storage
      FILE_STORAGE_URL: http://dufs:5000

      # Security
      ENCRYPT_PASSWORD: test_encryption_key
      JWT_SECRET: test_jwt_secret
      INTERNAL_API_KEY: test_api_key

      # Email configuration
      BREVO_API_KEY: test_brevo_api_key
      EMAIL_PROVIDER: brevo

      # Link durations (in milliseconds)
      NEW_USER_LINK_DURATION: 172800000
      PASSWORD_RESET_LINK_DURATION: 900000

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Run tests
        run: pnpm test

      - name: Run e2e tests
        run: pnpm test:e2e

      - name: Build
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
